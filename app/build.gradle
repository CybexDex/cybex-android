apply plugin: "com.android.application"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    def keystoreAlias = ''
    def keystoreAliasPassword = ''
    def keystoreFile = ''
    def keystorePassword = ''

    Properties properties = new Properties()
    properties.load(project.rootProject.file('keystores/release.keystore.properties').newDataInputStream())

    keystoreAlias = properties.getProperty("key.alias")
    keystoreAliasPassword = properties.getProperty("key.alias.password")
    keystoreFile = file(properties.getProperty("key.path"))
    keystorePassword = properties.getProperty("key.store.password")

    signingConfigs {
        release {
            keyAlias keystoreAlias
            keyPassword keystoreAliasPassword
            storeFile keystoreFile
            storePassword keystorePassword
        }
    }

    flavorDimensions "default"
    productFlavors {
        googleplay {
            applicationId 'com.cybexmobile'
            applicationIdSuffix ".google"
            dimension 'default'
            manifestPlaceholders = [UMENG_CHANNEL: "googleplay"]
        }
        online {
            applicationId 'com.cybexmobile'
            dimension 'default'
            manifestPlaceholders = [UMENG_CHANNEL: "online"]
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "Cybex_${defaultConfig.versionName}_${variant.flavorName}_${variant.buildType.name}_${getCurrTime()}.apk"
        }
    }

    defaultConfig {
        applicationId "com.cybexmobile"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 109
        versionName "1.10.9"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'license/LICENSE.dom-documentation.txt'
        exclude 'license/LICENSE.dom-software.txt'
        exclude 'license/README.dom.txt'
        exclude 'license/README.sax.txt'
        exclude 'license/NOTICE'
        exclude 'license/LICENSE'
        exclude 'license/*'

        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
        exclude 'lib/armeabi-v7a/libflutter.so'
    }

    dexOptions {
        javaMaxHeapSize "6144m"
    }
}

def getCurrTime() {
    def date = new Date()
    return date.format('yyyyMMddHHmmss')
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$rootProject.ext.dependencies.support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:support-vector-drawable:$rootProject.ext.dependencies.support_version"
    implementation "com.android.support:exifinterface:$rootProject.ext.dependencies.support_version"
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support:support-v4:$rootProject.ext.dependencies.support_version"
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'me.grantland:autofittextview:0.2.1'
    implementation 'info.hoang8f:android-segmented:1.0.6'
    implementation 'com.pixplicity.sharp:library:1.1.0'

    implementation 'org.decimal4j:decimal4j:1.0.3'
    //zxing
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.journeyapps:zxing-android-embedded:3.2.0@aar'
    implementation 'com.github.SumiMakito:AwesomeQRCode:1.0.0'
    implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.3.6'
    implementation 'pub.devrel:easypermissions:1.0.1'
    //Jadeticon
    implementation 'com.github.WycliffeAssociates:jdenticon-kotlin:-SNAPSHOT'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    implementation project(':MPChartLib')
    if (isModule == "true") {
        implementation project(':module-eto')
    } else {
        implementation project(':module-base')
    }
    //Leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'

    //Arouter
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.1'

    //Dagger
    annotationProcessor 'com.google.dagger:dagger-compiler:2.7'

    implementation project(':js-bridge')

    implementation 'com.caverock:androidsvg-aar:1.3'
    //eNotes
    implementation 'io.enotes.sdk:library:1.0.8'
    //Flutter
    implementation project(':flutter')
}
